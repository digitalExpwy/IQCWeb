@model IQCWeb.DTO.Inspections

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create a New Inspection</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
   
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.Label("Record Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.IsInc, "0", htmlAttributes: new { @class = "radio-inline", @checked = "checked"}) Incoming
                @Html.RadioButtonFor(model => model.IsInc, "1", htmlAttributes: new { @class = "radio-inline" }) InProcess
                @Html.ValidationMessageFor(model => model.IsInc, "", new { @class = "text-danger" })
            </div>       

        </div>

        <div class="form-group">
            @Html.Label("Part Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PartNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PartNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Date Inspected", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateInspected, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.DateInspected, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Inspector", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EmployeeCounter", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmployeeCounter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("QC In", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QC_In, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.QC_In, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("QC Out", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QC_Out, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.QC_Out, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationID", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("MFR Part Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MfrPartNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MfrPartNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Revision", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Revision, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Revision, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("PO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Receiver #", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RcvrNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RcvrNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Receiver Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecordDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.RcvrDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Vendor ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VendorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Quantity Received", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QtyReceived, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QtyReceived, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sample Size", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SampleSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SampleSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("1st piece inspection?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.RadioButtonFor(model => model.FirstPce, "True", htmlAttributes: new { @class = "radio-inline" }) Yes
                @Html.RadioButtonFor(model => model.FirstPce, "False", htmlAttributes: new { @class = "radio-inline", @checked = "checked" }) No
                @Html.ValidationMessageFor(model => model.FirstPce, "", new { @class = "text-danger" })
            </div>

        </div>    
       

        <div class="form-group">
            @Html.Label("Country of Origin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryID", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="form-group">
            @Html.Label("Acceptance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Accept, "True", htmlAttributes: new { @class = "radio-inline", @checked = "checked" }) PASS
                @Html.RadioButtonFor(model => model.Accept, "False", htmlAttributes: new { @class = "radio-inline" }) FAIL
                @Html.ValidationMessageFor(model => model.Accept, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.Label("Comments", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comments, 4, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script type="text/javascript">
    $('.datepicker').datepicker()
</script>
