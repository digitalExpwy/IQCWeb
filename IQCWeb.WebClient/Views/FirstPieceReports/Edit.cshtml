@model IQCWeb.DTO.FirstPieceReports

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>FirstPieceReports</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FPR_ID)

        <div class="form-group">
            @Html.Label("FPR No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FPR, new { htmlAttributes = new { @class = "form-control", required = "required" } })               
                @Html.ValidationMessageFor(model => model.FPR, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("FPR Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FprDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.FprDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("RFI", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RFI_ID", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RFI_ID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DesignSiteID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DesignSiteID", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DesignSiteID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Engineer Acceptance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.AcceptMechEng, "1", htmlAttributes: new { @class = "radio-inline" }) Accept
                @Html.RadioButtonFor(model => model.AcceptMechEng, "6", htmlAttributes: new { @class = "radio-inline" }) Reject
                @Html.ValidationMessageFor(model => model.AcceptMechEng, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.Label("QA Acceptance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.AcceptQA, "1", htmlAttributes: new { @class = "radio-inline" }) Accept
                @Html.RadioButtonFor(model => model.AcceptQA, "2", htmlAttributes: new { @class = "radio-inline" }) Reject
                @Html.ValidationMessageFor(model => model.AcceptQA, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">
            @Html.Label("Mech Engineer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AuthorizedMechEng", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorizedMechEng, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("EPL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EPL", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EPL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mech Engineer Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MechEngDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.MechEngDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("QA Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.QADate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.QADate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("EPL Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.QADate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.EplDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Comments to Purchasing", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.CommentsToPurchasing, 4, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommentsToPurchasing, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Comments to Eng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.CommentsToEng, 4, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommentsToEng, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("QA Required", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.QARequired, "1", htmlAttributes: new { @class = "radio-inline" }) Yes
                @Html.RadioButtonFor(model => model.QARequired, "0", htmlAttributes: new { @class = "radio-inline" }) No
                @Html.ValidationMessageFor(model => model.QARequired, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">
            @Html.Label("Reject Reason", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RejReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RejReason, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.OutToEng, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OutToEng, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OutToEng, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Out To Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OutToDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.OutToDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Inspection Details", "Details", "Inspections", new { id = Model.InspID }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<script type="text/javascript">
    $('.datepicker').datepicker()
</script>
